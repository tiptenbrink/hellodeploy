name: App Build

on:
    # this allows it to be called from another workflow
    workflow_call:
      inputs:
          # this is the environment we're building for
          env:
            required: true
            type: string

permissions:
  packages: write
  contents: read

jobs:
  build-server:
    runs-on: ubuntu-latest
    steps:
      # we check out the repository
      - uses: actions/checkout@v4
      # we move the source and deploy files, just like we did before manually
      - name: Move source
        run: |
            mkdir -p deploy/context
            cp app/*.js deploy/context
            cp app/*.json deploy/context
            cp deploy/containers/app/* deploy/context
      # we log into the GitHub Container Registry (alternative to Docker Hub)
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor}}
          password: ${{ github.token }}
      # Set up buildx for later build-push-action, which is necessary for cache feature
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      # Build and push
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          # where we moved all the files to that will be used to build the image
          context: deploy/context
          # replace tiptenbrink with your organization name or GitHub username (i.e. the parent name of your repo)
          tags: ghcr.io/tiptenbrink/hellodeploy-app:${{ inputs.env }}
          # we use the GitHub Actions (gha) cache to make future builds faster
          cache-from: type=gha
          cache-to: type=gha, mode=max
          push: true

